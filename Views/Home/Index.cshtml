@{
    ViewData["Title"] = "Home Page";
}


@* <head> *@
@*     <title> *@
@*         How to get the coordinates of a mouse *@
@*         click on a canvas element? *@
@*     </title> *@
@* </head> *@
@*    *@
@* <body> *@
@*     <h1 style="color: green"> *@
@*         GeeksforGeeks *@
@*     </h1> *@
@*        *@
@*     <b> *@
@*         How do I get the coordinates of a  *@
@*         mouse click on a canvas element? *@
@*     </b> *@
@*        *@
@*     <p> *@
@*         Click anywhere on the canvas element *@
@*         to get the mouse pointer location. *@
@*     </p> *@
@*        *@
@*     <p> *@
@*         The size of the canvas *@
@*         is a square of 200px. *@
@*     </p> *@
@*        *@
@*     <p>Check the console for the output.</p> *@
@*        *@
@*     <canvas width="200" height="200" *@
@*         style="background-color: green"> *@
@*     </canvas> *@
@*    *@
@* <script type="text/javascript"> *@
@* *@
@*     var xValue; *@
@*     var yValue; *@
@*         function getMousePosition(canvas, event) { *@
@*             let rect = canvas.getBoundingClientRect(); *@
@*             xValue = event.clientX - rect.left; *@
@*             yValue = event.clientY - rect.top; *@
@*         } *@
@*        *@
@*         let canvasElem = document.querySelector("canvas"); *@
@*            *@
@*         canvasElem.addEventListener("mousedown", function(e) *@
@*         { *@
@*             getMousePosition(canvasElem, e); *@
@*         }); *@
@*         window.onload = function(xValue, yValue) { *@
@*             var dps = []; //dataPoints.  *@
@* *@
@*             var chart = new CanvasJS.Chart("chartContainer", { *@
@*                 title: { *@
@*                     text: "Accepting DataPoints from User Input" *@
@*                 }, *@
@*                 data: [{ *@
@*                     type: "line", *@
@*                     dataPoints: dps *@
@*                 }] *@
@*             }); *@
@* *@
@*             function addDataPointsAndRender() { *@
@*                 console.log("Coordinate x: " + xValue,  *@
@*                                                     "Coordinate y: " + yValue); *@
@*                 dps.push({ *@
@*                     x: xValue, *@
@*                     y: yValue *@
@*                 }); *@
@*                 chart.render(); *@
@*             } *@
@* *@
@*             var renderButton = document.getElementById("renderButton"); *@
@*             renderButton.addEventListener("click", addDataPointsAndRender); *@
@*         } *@
@*     </script> *@
@*     <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script> *@
@* *@
@*     <div id="chartContainer" style="height: 270px; width: 100%;"> *@
@*     </div> *@
@* </body> *@
@* <head> *@
@*     <title>Web</title> *@
@*     <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script> *@
@* </head> *@
@* <body> *@
@*    <div id="A" style="left:100px;"> Default    <br /> mouse<br/>position </div> *@
@*    <div id="B" style="left:300px;"> offset()   <br /> mouse<br/>position </div> *@
@* <div id="C" style="left:500px;"> position() <br /> mouse<br/>position </div> *@
@* *@
@* <script type="text/javascript"> *@
@* $(document).ready(function (e) { *@
@* *@
@*     $('#A').click(function (e) { //Default mouse Position  *@
@*         alert(e.pageX + ' , ' + e.pageY); *@
@*     }); *@
@* *@
@*     $('#B').click(function (e) { //Offset mouse Position *@
@*         var posX = $(this).offset().left, *@
@*             posY = $(this).offset().top; *@
@*         alert((e.pageX - posX) + ' , ' + (e.pageY - posY)); *@
@*     }); *@
@* *@
@*     $('#C').click(function (e) { //Relative ( to its parent) mouse position  *@
@*         var posX = $(this).position().left, *@
@*             posY = $(this).position().top; *@
@*         alert((e.pageX - posX) + ' , ' + (e.pageY - posY)); *@
@*     }); *@
@* }); *@
@* </script> *@
@* </body> *@
<head>
    <title>
        Web
    </title>
  <style>
    div.line {
      transform-origin: 0 100%;
      height: 20px;
      border-bottom: 9px solid #95999c;
      border-top: 9px solid #95999c;
      background: white;
      box-shadow: 0 0 4px 2px white;
    }
    
    #demo {
      border: 1px dashed #000000;
      background-image: linear-gradient(#009933, #009933);
      height: 700px;
    }
    </style>
  <script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>
</head>                                   
 
<body>
<script type="text/javascript"> 
$(document).ready(function () {    
  $(function() {
    var x1 = null,
      y1 = null;
    var offsetX = 0,
      offsetY = 0;
    var resX = null,
      resY = null, 
      resX1 = null,
      resY1 = null;
  
    var moveLineId = "moveLine";
  
    // Use "mousedown" here so the start of a line is registered as soon as you press the mouse button.
    $('#demo').on("mousedown", function(event) {
        $(".line").removeAttr('id');
        var x = event.pageX,
          y = event.pageY;
  
        if (x1 == null) {
          x1 = x;
          y1 = y;
        } else {
          x1 = y1 = null;
        }
      })
      .delegate('.line', 'mouseup', function(event) {
        $.ajax(
                    {
                        type: "POST", //HTTP POST Method
                        url: "Home/Index", // Controller/View 
                        data: { //Passing data
                            resX: resX, //Reading text box values using Jquery 
                            resY: resY,
                            resX1: resX1,
                            resY1: resY1
                        }
                    });
        console.log(resX, " ", resY, " ", resX1, " ", resY1);
              resX = null;
              resY = null;
              resX1 = null;
              resY1 = null;
        // Use "mouseup" here so the start of a line is registered as soon as you release the mouse button.
        event.preventDefault();
        $(this).toggleClass('active');
        x1 = y1 = null;
        return false;
      });
  
    $('#demo').mousemove(function(event) {
      var x = event.pageX,
        y = event.pageY;
      if (x1 != null) {
        $("#" + moveLineId).remove();
        createLine(x1, y1, x, y, moveLineId)
      } else {
        x1 = y1 = null;
      }
    });
  
  
    function createLine(x1, y1, x2, y2, id) {
      
      resX = x1;
      resY = y1;
      resX1 = x2;
      resY1 = y2;
  
      var length = Math.sqrt(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));
      var angle = Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;
      var transform = 'rotate(' + angle + 'deg)';
  
      offsetX = (x1 > x2) ? x2 : x1;
      offsetY = (y1 > y2) ? y2 : y1;
  
      var line = $('<div>')
        .appendTo('#demo')
        .addClass('line')
        .css({
          'position': 'absolute',
          '-webkit-transform': transform,
          '-moz-transform': transform,
          'transform': transform
        })
        .width(length)
        .offset({
          left: offsetX,
          top: offsetY
        });
  
      if (id != null) line.attr('id', id);
  
      return line;
    }
  
  });
});
</script>
<div id="demo" class="wide"></div>
</body>
